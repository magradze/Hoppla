// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  role          String?   @default("user")
  phone         String?
  address       String?
  birthday      DateTime? @map("birth_day")
  password      String?
  accounts      Account[]
  sessions      Session[]
  rides         Ride[]
  createdAt     DateTime? @map("created_at")
  trips         Trip[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Ride {
  id            String     @id @default(cuid())
  name          String
  description   String?
  startLocation String     @map("start_location")
  endLocation   String     @map("end_location")
  distance      Float
  duration      String
  places        Int
  price         Float
  startDate     DateTime   @map("start_date")
  userId        String     @map("user_id")
  driver        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  stops         Stop[]
  rideRules     RideRule[]
  Trip          Trip[]
  createdAt     DateTime?  @map("created_at")

  @@map("rides")
}

model Stop {
  id     String @id @default(cuid())
  name   String
  rideId String @map("ride_id")
  ride   Ride   @relation(fields: [rideId], references: [id], onDelete: Cascade)

  @@map("stops")
}

model RideRule {
  id        String    @id @default(cuid())
  rideId    String    @map("ride_id")
  ride      Ride      @relation(fields: [rideId], references: [id], onDelete: Cascade)
  rule      String
  value     String
  createdAt DateTime? @map("created_at")

  @@map("ride_rules")
}

model Trip {
  id         String @id @default(cuid())
  rideId     String @map("ride_id")
  ride       Ride   @relation(fields: [rideId], references: [id], onDelete: Cascade)
  passangers User[]

  @@map("trips")
}

// model TripRequest {
//   id            String   @id @default(cuid())
//   tripId        String   @map("trip_id")
//   trip          Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
//   userId        String   @map("user_id")
//   user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   status        String
//   passangers    Int
//   price         Float
//   startDate     DateTime @map("start_date")
//   startLocation String   @map("start_location")
//   endLocation   String   @map("end_location")
//
//   @@map("trip_requests")
// }
//
// model TripRequestMessage {
//   id            String   @id @default(cuid())
//   tripRequestId String   @map("trip_request_id")
//   tripRequest   TripRequest     @relation(fields: [tripRequestId], references: [id], onDelete: Cascade)
//   userId        String   @map("user_id")
//   user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   message       String
//   createdAt     DateTime @map("created_at")
//   updatedAt     DateTime @map("updated_at")
//
//   @@map("trip_request_messages")
// }
